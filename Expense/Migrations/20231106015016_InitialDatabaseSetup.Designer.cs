// <auto-generated />
using System;
using Expense.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Expense.Migrations
{
    [DbContext(typeof(ExpenseDBContext))]
    [Migration("20231106015016_InitialDatabaseSetup")]
    partial class InitialDatabaseSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("MySequence");

            modelBuilder.Entity("Expense.Models.DBEntities.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"));

                    b.Property<string>("CostUnitCode")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("CostUnitName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("NetOfVatTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TaxableTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionNumber")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("VatTotal")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("ExpenseId");

                    b.ToTable("Expense");
                });

            modelBuilder.Entity("Expense.Models.DBEntities.ExpenseDetails", b =>
                {
                    b.Property<int>("ExpenseDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseDetailID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ExpenseTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Expenseid")
                        .HasColumnType("int");

                    b.Property<decimal>("NetOfVatAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("VatAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ExpenseDetailID");

                    b.ToTable("ExpenseDetails");
                });

            modelBuilder.Entity("Expense.Models.DBEntities.ExpenseTypes", b =>
                {
                    b.Property<int>("ExpenseTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseTypeID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(50");

                    b.HasKey("ExpenseTypeID");

                    b.ToTable("ExpenseTypes");
                });

            modelBuilder.Entity("Expense.Models.DBEntities.UserRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CostUnitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRegistration");
                });

            modelBuilder.Entity("Expense.Models.ExpenseDetailsViewModel", b =>
                {
                    b.Property<int>("ExpenseDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseDetailID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExpenseTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Expenseid")
                        .HasColumnType("int");

                    b.Property<decimal>("NetOfVatAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VatAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ExpenseDetailID");

                    b.HasIndex("Expenseid");

                    b.ToTable("ExpenseDetailsViewModel");
                });

            modelBuilder.Entity("Expense.Models.ExpenseDetailsViewModel", b =>
                {
                    b.HasOne("Expense.Models.DBEntities.Expense", null)
                        .WithMany("ExpenseDetails")
                        .HasForeignKey("Expenseid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Expense.Models.DBEntities.Expense", b =>
                {
                    b.Navigation("ExpenseDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
