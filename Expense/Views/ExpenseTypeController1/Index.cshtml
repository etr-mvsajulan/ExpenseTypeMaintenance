@model List<Expense.Models.ExpensetypeViewModel>

@{
    ViewData["Title"] = "Expense Type Details";
    var successMessage = TempData["successMessage"]?.ToString();
    var errorMessage = TempData["errorMessage"]?.ToString();

    Pager pager = new Pager();

    int pageNo = 0;

    if(ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<h3>@ViewData["Title"]</h3>
<hr />
@if (!string.IsNullOrWhiteSpace(@successMessage))
{
    <div class="alert alert-success">
        <strong>Success!</strong>@successMessage
        <button type="button" class="btnbtn-close float-end" data-bs-dismiss="alert"></button>
    </div>
    
}
else if (!string.IsNullOrWhiteSpace(@errorMessage))
{
    <div class="alert alert-danger">
        <strong>Error!</strong>@errorMessage
        <button type="button" class="btn btn-close float-end" data-bs-dismiss="alert"></button>
    </div>
    
}
 
<form>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            // Auto-select the text input field after page refresh
            // Auto-select the text input field after page refresh
            var $searchInput = $("#searchs-input");
            var inputValue = $searchInput.val();
            $searchInput.focus().val("").val(inputValue);
        });
    </script>
    @using (Html.BeginForm("Index", "Home", FormMethod.Get)){
       <div class="row justify-content-end">
        <div class="col-auto">
            @Html.TextBox("searchs", null, new { @oninput = "this.form.submit();", id = "searchs-input", @class = "form-control", placeholder = "Search description" })
        </div>
        <div class="col-auto">
            <input type="submit" value="Search" class="btn btn-primary" />
        </div>
    </div>
    }
    
    <button asp-action="Create" asp-controller="ExpenseTypeController1" class="btn btn-primary mb-3">Create Expense Type</button>
    <table class="table table-responsive table-hover table-bordered">
        <thead>
            <tr class="table-active">
                <th>Id</th>
                <th>Code</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @if(Model != null && Model.Any())
            {
                @foreach (var expensetype in Model)
                {
                    <tr>
                        <td>@expensetype.ExpenseTypeID</td>
                        <td>@expensetype.Code</td>
                        <td>@expensetype.Description</td>
                        <td>
                            <div class="btn-group btn-group-sm">
                                <a asp-controller="ExpenseTypeController1" asp-action="Edit" asp-route-id="@expensetype.ExpenseTypeID" class="btn btn-primary">Edit</a>
                            </div>
                            <div class="btn-group btn-group-sm">
                                <a asp-controller="ExpenseTypeController1" asp-action="Delete" asp-route-id="@expensetype.ExpenseTypeID" class="btn btn-danger">Delete</a>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6">
                        <div>
                            No Expense Type at this moment
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="container">
        @if (pager.TotalPages > 0)
        {
            <ul class="pagination justify-content-end">
                @if (pager.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="ExpenseTypeController1" asp-action="=Index" asp-route-pg="1">First</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-controller="ExpenseTypeController1" asp-action="=Index" asp-route-pg="@(pager.CurrentPage - 1)">Previous</a>
                    </li>
                }
                
                @for (var pge = pager.StartPage; pge <= pager.EndPage; pge++)
                {
                    <li class="page-item @(pge == pager.CurrentPage ? "active" : "")")>
                        <a class="page-link" asp-asp-controller="ExpenseTypeController1" asp-action="Index" asp-route-pg="@pge">@pge</a>
                    </li>

                }

                @if (pager.CurrentPage < pager.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="ExpenseTypeController1" asp-action="=Index" asp-route-pg="@(pager.CurrentPage +1)">Next</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-controller="ExpenseTypeController1" asp-action="=Index" asp-route-pg="@(pager.TotalPages)">Last</a>
                    </li>
                }
            </ul>
        }

        
    </div>
</form>